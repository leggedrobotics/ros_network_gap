<launch>
  <arg name="uav_name" default="auk" />

  <node pkg="ros_network_gap" type="arena_odom_from_odom.py" name="arena_odom_$(arg uav_name)" output="screen">
	<param name="odom_frame" value="world" /> 	<!-- frame id of input odometry-->
	<param name="arena_frame" value="arena" /> 	<!-- frame id of arena odometry output-->
	<param name="robot_name" value="$(arg uav_name)" /> 	<!-- robot name-->
	<param name="max_rate" value="5" />			<!-- Maximum rate of conversion -->

	<remap from="odometry_input" to="/$(arg uav_name)/msf_core/odometry" />
	<remap from="arena_odometry" to="/$(arg uav_name)/arena_odometry" />
  </node>

  <node pkg="ros_network_gap" type="ros_network_gap.py" name="network_gap_$(arg uav_name)" output="screen">
  	<param name="broadcast" value="10.10.50.255" /> 	<!-- broadcast addr of network-->
	<param name="port" value="14317" />  			<!-- UDP listener port -->
	<param name="msg_pkg" value="nav_msgs.msg" />  		<!-- package name of message + .msg for python namespace -->
	<param name="msg_type" value="Odometry" />		<!-- Message type -->
	<param name="max_rate" value="5" />			<!-- Maximum rate of publishing to other networks -->
	<remap from="input_topic" to="/$(arg uav_name)/arena_odometry" />
	<remap from="network_gap_topic" to="/challenge/odometry_exchange" />
  </node>
</launch>
